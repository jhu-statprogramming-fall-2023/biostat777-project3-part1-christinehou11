n11 = 10
n12 = 30
n21 = 30
n22 = 10
alpha = 0.10
OR_log = log(n11*n22/(n12*n21))
SE_OR_log = sqrt(1/n11+1/n22+1/n21+1/n21)
exp(OR_log + c(-1,1)*qnorm(1-alpha/2)*SE_OR_log)
OR_log
log(1)
log(1/9)
n11 = 10
n12 = 30
n21 = 30
n22 = 10
alpha = 0.10
OR = n11*n22/(n12*n21)
OR
OR_log = log(OR)
SE_OR_log = sqrt(1/n11+1/n22+1/n21+1/n21)
exp(OR_log + c(-1,1)*qnorm(1-alpha/2)*SE_OR_log)
p1 = 10/40
p2 = 30/40
n1 = 40
n2 = 40
RR = p1/p2
RR
SE_RR_log = sqrt((1-p1)/(n1*p1) + (1-p2)/(n2*p2))
exp(log(RR) + c(-1,1)*qnorm(1-alpha/2)*SE_RR_log)
RD = p1-p2
RD
SE_RD = sqrt((p1*(1-p1))/n1+(p2*(1-p2))/n2)
RD + c(-1,1)*qnorm(1-alpha/2)*SE_RD
fn_cos <- function(x, k) {
i = seq(1:k)
cos_fun = 1+sum((-1)^i*x^(2*i)/factorial(2*i))
return(cos_fun)
}
fun_sin <- function(x, k) {
i = seq(0:k-1)
sin_fun = sum((-1)^(i-1)*x^(2*i-1)/factorial(2*i-1))
return(sin_fun)
}
fn_cos <- function(x, k) {
i = seq(1:k)
cos_fun = 1+sum((-1)^i*x^(2*i)/factorial(2*i))
return(cos_fun)
}
fun_sin <- function(x, k) {
i = seq(1:k)
sin_fun = sum((-1)^(i-1)*x^(2*i-1)/factorial(2*i-1))
return(sin_fun)
}
x = c(1,2,3,4)
sum(x)
mean(x)
sd(x)
sample_mean <- function(x) {
N = length(x)
xbar = 1/N*sum(x)
return(xbar)
}
sample_sd <- function(x) {
N = length(x)
s = sqrt(1/(N-1)*sum((x-xbar)^2))
return(s)
}
sample_mean <- function(x) {
N = length(x)
xbar = 1/N*sum(x)
return(xbar)
}
sample_sd <- function(x) {
N = length(x)
s = sqrt(1/(N-1)*sum((x-sample_mean(x))^2))
return(s)
}
sample_mean(x)
sample_sd(x)
calculate_CI <- function(x, conf = 0.95) {
xbar = sample_mean(x)
s = sample_sd(x)
alpha = 1-conf
N = length(x)
return(xbar+c(-1,1)*qt(alpha/2,N-1)*s)
}
xbar = 2.5
s = sample_sd(x)
xbar+c(-1,1)*qt(0.025,3)*s
calculate_CI <- function(x, conf = 0.95) {
xbar = sample_mean(x)
s = sample_sd(x)
alpha = 1-conf
N = length(x)
return(xbar+c(-1,1)*qt(alpha/2,N-1)*s)
}
calculate_CI(x,0.95)
install.packages("purrr")
l1 = list(x = c("a","b"), y = c("c","d"))
l``
l1
tmp_dat <- data.frame(
x = 1:5,
y = 6:10
)
## try it out
map_dbl(tmp_dat, mean)
## try it out
library(purrr)
## try it out
library(purrr)
map_dbl(tmp_dat, mean)
## try it out
tmp_dat |> map(mean)
mtcars
# different numbers of cylinders
unique(mtcars$cyl)
by_cyl <- split(mtcars, mtcars$cyl)
length(by_cyl)
str(by_cyl)
## try it out
by_cyl |>
map(.f = lm(mpg~wt, data = .x)) |>
map_dbl(.f = coef)
## try it out
by_cyl |>
map(.f = ~lm(mpg~wt, data = .x)) |>
map(.f = coef)
by_cyl |>
map(.f = ~ lm(mpg ~ wt, data = .x))
## try it out
by_cyl |>
map(.f = ~lm(mpg~wt, data = .x)) |>
map(.f = coef) |>
map_dbl(2)
slopes <- double(length(by_cyl))
for (i in seq_along(by_cyl)) {
model <- lm(mpg ~ wt, data = by_cyl[[i]])
slopes[[i]] <- coef(model)[[2]]
}
slopes
## try it out
mpg
## try it out
by_cyl |>
map(.f = mean(.x$mpg))
## try it out
by_cyl |>
map(.f = ~ mean(.x$mpg))
by_cyl |>
map_dbl(.f = ~mean(.x$mpg)) # returns a vector of doubles
by_cyl |>
map_dfr(.f = ~colMeans(.x)) # return a data frame by row binding
by_cyl |>
map_dfc(.f = ~colMeans(.x)) # return a data frame by col binding
setwd("/Users/chrishou_kookv/Desktop/StatWorkflow/jpeg")
usethis::use_vignette()
usethis::use_vignette("Example_analysis")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("jpeg")
library(jpeg)
library(ggplot2)
library(tidyverse)
# Test if a directory named data exists locally
if (!dir.exists(here::here("data"))) {
dir.create(here::here("data"))
}
# saves data only once
files = c("tuesdata_cocktails.rda")
if (any(!file.exists(here::here("data",files)))) {
tuesdata <- tidytuesdayR::tt_load('2020-05-26')
cocktails <- tuesdata$cocktails
# save the files to RDA objects
save(cocktails, file = here::here("data","tuesdata_cocktails.rda"))
}
# load the data
load(here::here("data","tuesdata_cocktails.rda")) #cocktails
n_unique <- function(x) length(unique(x))
purrr::map_int(.x = cocktails,
.f = n_unique)
purrr::map_chr(.x = cocktails,
.f = typeof)
any(is.na(cocktails))
dim(cocktails)
cocktails %>%
filter(alcoholic == "Alcoholic")%>%
select(drink)%>%
unique() %>%
nrow()
df1 = cocktails %>%
filter(alcoholic == "Alcoholic") %>%
select(category,drink, ingredient, ingredient_number) %>%
pivot_wider(names_from = "ingredient_number",
values_from = "ingredient") %>%
group_by(category) %>%
summarize(n = n())
df1
df1 %>%
ggplot() +
geom_col(aes(x = category, y = n),
fill = "#66c2a5") +
labs(
title = "Number of Drinks in Alcoholic Cocktail Categories",
subtitle = "Ordinary Drink has the most count among all alcoholic drink categories\nMilk/Float/Shake has the least count",
x = "Category",
y = "Count",
caption = "Christine Hou"
) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df2 = cocktails %>%
filter(alcoholic == "Alcoholic") %>%
select(drink, category,ingredient, ingredient_number) %>%
group_by(drink) %>%
summarize(num_ing = n()) %>%
group_by(num_ing) %>%
summarize(num =n()) %>%
mutate(percentage = num/sum(num)*100) %>%
mutate(num_ing = as.factor(num_ing))
df2
df2 %>%
ggplot()+
geom_bar(aes(x = "", y = percentage, fill = num_ing),
stat = "identity") +
coord_polar(theta = "y", start=0) +
theme_void() +
labs(title = "Distribution of Ingredients Used in Alcoholic Drinks",
subtitle = "Most alcoholic drinks use 2-5 ingredients",
caption = "Christine Hou",
fill = "Number of Ingredients")
df3 = cocktails %>%
filter(alcoholic == "Alcoholic") %>%
select(drink, category,ingredient, ingredient_number) %>%
group_by(drink,category) %>%
summarize(num_ing = n(),
.groups = 'drop')
df3
df3 %>%
ggplot() +
geom_boxplot(aes(x = category, y = num_ing)) +
facet_wrap(~category, scales = "free") +
theme_minimal() +
coord_cartesian(ylim = c(0,13)) +
labs(
x = "Category",
y = "Number of Ingredients",
title = "Number of Ingredients Used in Alcoholic Drinks",
subtitle = "Drinks belonging to Homemade Liqueur category has the highest number of ingredients (12)\nDrinks belonging to Cocktail and Ordinary Drink category has the least number of ingredients (1)",
caption = "Christine Hou"
)
url = cocktails %>%
filter(category == "Homemade Liqueur",
ingredient_number == 12) %>%
pull(drink_thumb)
if (!file.exists("homemade.jpg")) {
dir.existdownload.file(url,
destfile = paste0(getwd(),"/homemade.jpg"),
mode = "wb")
}
url = cocktails %>%
filter(category == "Homemade Liqueur",
ingredient_number == 12) %>%
pull(drink_thumb)
if (!file.exists("homemade.jpg")) {
download.file(url,
destfile = paste0(getwd(),"/homemade.jpg"),
mode = "wb")
}
myjpeg_array <- readJPEG(source = "homemade.jpg")
plot(0:10,0:10,type="n",ann=FALSE,axes=FALSE)
rasterImage(myjpeg_array,0,0,6,10)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("jpeg")
library(jpeg)
library(ggplot2)
library(tidyverse)
# Test if a directory named data exists locally
if (!dir.exists(here::here("data"))) {
dir.create(here::here("data"))
}
# saves data only once
files = c("tuesdata_cocktails.rda")
if (any(!file.exists(here::here("data",files)))) {
tuesdata <- tidytuesdayR::tt_load('2020-05-26')
cocktails <- tuesdata$cocktails
# save the files to RDA objects
save(cocktails, file = here::here("data","tuesdata_cocktails.rda"))
}
# load the data
load(here::here("data","tuesdata_cocktails.rda")) #cocktails
n_unique <- function(x) length(unique(x))
purrr::map_int(.x = cocktails,
.f = n_unique)
purrr::map_chr(.x = cocktails,
.f = typeof)
any(is.na(cocktails))
dim(cocktails)
cocktails %>%
filter(alcoholic == "Alcoholic")%>%
select(drink)%>%
unique() %>%
nrow()
df1 = cocktails %>%
filter(alcoholic == "Alcoholic") %>%
select(category,drink, ingredient, ingredient_number) %>%
pivot_wider(names_from = "ingredient_number",
values_from = "ingredient") %>%
group_by(category) %>%
summarize(n = n())
df1
df1 %>%
ggplot() +
geom_col(aes(x = category, y = n),
fill = "#66c2a5") +
labs(
title = "Number of Drinks in Alcoholic Cocktail Categories",
subtitle = "Ordinary Drink has the most count among all alcoholic drink categories\nMilk/Float/Shake has the least count",
x = "Category",
y = "Count",
caption = "Christine Hou"
) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df2 = cocktails %>%
filter(alcoholic == "Alcoholic") %>%
select(drink, category,ingredient, ingredient_number) %>%
group_by(drink) %>%
summarize(num_ing = n()) %>%
group_by(num_ing) %>%
summarize(num =n()) %>%
mutate(percentage = num/sum(num)*100) %>%
mutate(num_ing = as.factor(num_ing))
df2
df2 %>%
ggplot()+
geom_bar(aes(x = "", y = percentage, fill = num_ing),
stat = "identity") +
coord_polar(theta = "y", start=0) +
theme_void() +
labs(title = "Distribution of Ingredients Used in Alcoholic Drinks",
subtitle = "Most alcoholic drinks use 2-5 ingredients",
caption = "Christine Hou",
fill = "Number of Ingredients")
df3 = cocktails %>%
filter(alcoholic == "Alcoholic") %>%
select(drink, category,ingredient, ingredient_number) %>%
group_by(drink,category) %>%
summarize(num_ing = n(),
.groups = 'drop')
df3
df3 %>%
ggplot() +
geom_boxplot(aes(x = category, y = num_ing)) +
facet_wrap(~category, scales = "free") +
theme_minimal() +
coord_cartesian(ylim = c(0,13)) +
labs(
x = "Category",
y = "Number of Ingredients",
title = "Number of Ingredients Used in Alcoholic Drinks",
subtitle = "Drinks belonging to Homemade Liqueur category has the highest number of ingredients (12)\nDrinks belonging to Cocktail and Ordinary Drink category has the least number of ingredients (1)",
caption = "Christine Hou"
)
url = cocktails %>%
filter(category == "Homemade Liqueur",
ingredient_number == 12) %>%
pull(drink_thumb)
if (!file.exists("homemade.jpg")) {
download.file(url,
destfile = paste0(getwd(),"/homemade.jpg"),
mode = "wb")
}
myjpeg_array <- readJPEG(source = "homemade.jpg")
plot(0:10,0:10,type="n",ann=FALSE,axes=FALSE)
rasterImage(myjpeg_array,0,0,6,10)
img <- readJPEG("homemade.jpg")
r <- writeJPEG(img, raw(), quality=1)
img2 <- readJPEG(r)
plot(0:10,0:10,type="n",ann=FALSE,axes=FALSE)
rasterImage(img2,0,0,6,10)
install.packages("jpeg")
usethis::use_readme_md()
usethis::use_pkgdown()
pkgdown::build_site()
setwd("/Users/chrishou_kookv/Desktop/StatWorkflow/jpeg")
usethis::use_vignette()
usethis::use_vignette("Example_analysis")
usethis::use_readme_md()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(jpeg)
library(ggplot2)
library(tidyverse)
# Test if a directory named data exists locally
if (!dir.exists(here::here("data"))) {
dir.create(here::here("data"))
}
# saves data only once
files = c("tuesdata_cocktails.rda")
if (any(!file.exists(here::here("data",files)))) {
tuesdata <- tidytuesdayR::tt_load('2020-05-26')
cocktails <- tuesdata$cocktails
# save the files to RDA objects
save(cocktails, file = here::here("data","tuesdata_cocktails.rda"))
}
# load the data
load(here::here("data","tuesdata_cocktails.rda")) #cocktails
n_unique <- function(x) length(unique(x))
purrr::map_int(.x = cocktails,
.f = n_unique)
purrr::map_chr(.x = cocktails,
.f = typeof)
any(is.na(cocktails))
dim(cocktails)
cocktails %>%
filter(alcoholic == "Alcoholic")%>%
select(drink)%>%
unique() %>%
nrow()
df1 = cocktails %>%
filter(alcoholic == "Alcoholic") %>%
select(category,drink, ingredient, ingredient_number) %>%
pivot_wider(names_from = "ingredient_number",
values_from = "ingredient") %>%
group_by(category) %>%
summarize(n = n())
df1
df1 %>%
ggplot() +
geom_col(aes(x = category, y = n),
fill = "#66c2a5") +
labs(
title = "Number of Drinks in Alcoholic Cocktail Categories",
subtitle = "Ordinary Drink has the most count among all alcoholic drink categories\nMilk/Float/Shake has the least count",
x = "Category",
y = "Count",
caption = "Christine Hou"
) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df2 = cocktails %>%
filter(alcoholic == "Alcoholic") %>%
select(drink, category,ingredient, ingredient_number) %>%
group_by(drink) %>%
summarize(num_ing = n()) %>%
group_by(num_ing) %>%
summarize(num =n()) %>%
mutate(percentage = num/sum(num)*100) %>%
mutate(num_ing = as.factor(num_ing))
df2
df2 %>%
ggplot()+
geom_bar(aes(x = "", y = percentage, fill = num_ing),
stat = "identity") +
coord_polar(theta = "y", start=0) +
theme_void() +
labs(title = "Distribution of Ingredients Used in Alcoholic Drinks",
subtitle = "Most alcoholic drinks use 2-5 ingredients",
caption = "Christine Hou",
fill = "Number of Ingredients")
df3 = cocktails %>%
filter(alcoholic == "Alcoholic") %>%
select(drink, category,ingredient, ingredient_number) %>%
group_by(drink,category) %>%
summarize(num_ing = n(),
.groups = 'drop')
df3
df3 %>%
ggplot() +
geom_boxplot(aes(x = category, y = num_ing)) +
facet_wrap(~category, scales = "free") +
theme_minimal() +
coord_cartesian(ylim = c(0,13)) +
labs(
x = "Category",
y = "Number of Ingredients",
title = "Number of Ingredients Used in Alcoholic Drinks",
subtitle = "Drinks belonging to Homemade Liqueur category has the highest number of ingredients (12)\nDrinks belonging to Cocktail and Ordinary Drink category has the least number of ingredients (1)",
caption = "Christine Hou"
)
url = cocktails %>%
filter(category == "Homemade Liqueur",
ingredient_number == 12) %>%
pull(drink_thumb)
if (!file.exists("homemade.jpg")) {
download.file(url,
destfile = paste0(getwd(),"/homemade.jpg"),
mode = "wb")
}
myjpeg_array <- readJPEG(source = "homemade.jpg")
plot(0:10,0:10,type="n",ann=FALSE,axes=FALSE)
rasterImage(myjpeg_array,0,0,6,10)
img <- readJPEG("homemade.jpg")
r <- writeJPEG(img, raw(), quality=1)
img2 <- readJPEG(r)
plot(0:10,0:10,type="n",ann=FALSE,axes=FALSE)
rasterImage(img2,0,0,6,10)
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
?get_acs()
library(tidycensus)
get_acs()
